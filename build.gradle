plugins {
	id 'org.springframework.boot' version '2.5.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'java'
	id 'jacoco'
}

group = 'com.mutants'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-configuration-processor:2.5.6'
	implementation 'org.postgresql:postgresql:42.3.1'
	implementation 'junit:junit:4.13.1'
	implementation 'io.springfox:springfox-swagger2:3.0.0'
	implementation 'org.springdoc:springdoc-openapi-ui:1.5.12'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.jacoco:org.jacoco.agent:0.8.7'
	testImplementation 'org.apache.commons:commons-lang3:3.9'
}

jar {
	enabled = false
}

jacoco {
	toolVersion = "0.8.7"
}

jacocoTestReport {
	reports {
		xml.required = false
		html.required = false
		xml.destination file("${buildDir}/coverage.xml")
	}
}

test {
	jacoco {
		destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
		classDumpDir = file("$buildDir/jacoco/classpathdumps")
	}
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}
